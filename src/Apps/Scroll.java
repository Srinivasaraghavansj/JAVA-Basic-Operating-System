/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Apps;

import java.awt.Color;
import java.awt.event.*;
import javax.swing.*;

/**
 *
 * @author kkn-elective
 */
public class Scroll extends javax.swing.JInternalFrame {

    /**
     * Creates new form Scroll
     */
    public Scroll() {
        initComponents();
        b.setBackground(Color.GREEN);
        t = new javax.swing.Timer(500, new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                x++;
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        l1 = new javax.swing.JLabel();
        b = new javax.swing.JButton();
        rl = new javax.swing.JLabel();
        hl = new javax.swing.JLabel();
        i = new javax.swing.JLabel();

        addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                formMouseWheelMoved(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        l1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N

        b.setText("START");
        b.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bActionPerformed(evt);
            }
        });
        b.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                bKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addComponent(l1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 131, Short.MAX_VALUE)
                .addComponent(i, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(b, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rl, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(hl, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(l1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(i, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(b, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addComponent(rl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hl, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bActionPerformed
        t.start();
        b.setBackground(Color.RED);

    }//GEN-LAST:event_bActionPerformed

    private void formMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_formMouseWheelMoved

    }//GEN-LAST:event_formMouseWheelMoved

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
    }//GEN-LAST:event_formKeyPressed

    private void bKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bKeyPressed
 if (t.isRunning()) { rl.setText((s++) + "");
            if (dir == 5) {
                if (evt.getKeyCode() == KeyEvent.VK_UP) {
                    s++;
                }
                if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
                    t.stop();
                    rl.setText("Total Reactions=" + s);
                    hl.setText(("Reactions Per Sec:" + (s / x)));
                    s = 0;x=0;
                    b.setBackground(Color.GREEN);
                }
            } else if (dir == 6) {
                if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
                    s++;
                }
                if (evt.getKeyCode() == KeyEvent.VK_UP) {
                    t.stop();
                     rl.setText("Total Reactions=" + s);
                    hl.setText(("Reactions Per Sec:" + (double)s / x));
                    s = 0;x=0;
                    b.setBackground(Color.GREEN);

                }
            }
            dir = (int) (Math.random() * 10);
            CM.Maths.constrain(dir, 5, 6);
            if (dir == 5) {
                l1.setText("UP");
            }
            if (dir == 6) {
                l1.setText("DOWN");
            }
        }
    }//GEN-LAST:event_bKeyPressed
    Timer t;
    int x = 0, s = 0, h = 0, dir = 0, n = 0;
    boolean z = true;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b;
    private javax.swing.JLabel hl;
    private javax.swing.JLabel i;
    private javax.swing.JLabel l1;
    private javax.swing.JLabel rl;
    // End of variables declaration//GEN-END:variables
}
