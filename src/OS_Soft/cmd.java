/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package OS_Soft;

import Apps.*;
import java.awt.event.KeyEvent;
import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author kkn-elective
 */
public class cmd extends javax.swing.JInternalFrame {

    /**
     * Creates new form cmd
     */
    public cmd() {
        initComponents();
        t1.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ta1 = new javax.swing.JTextArea();
        t1 = new javax.swing.JTextField();

        setClosable(true);

        ta1.setEditable(false);
        ta1.setBackground(new java.awt.Color(0, 0, 0));
        ta1.setColumns(20);
        ta1.setForeground(new java.awt.Color(255, 255, 255));
        ta1.setRows(5);
        jScrollPane1.setViewportView(ta1);

        t1.setBackground(new java.awt.Color(0, 0, 0));
        t1.setForeground(new java.awt.Color(255, 255, 255));
        t1.setText("CMD>");
        t1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t1ActionPerformed(evt);
            }
        });
        t1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                t1KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 394, Short.MAX_VALUE)
            .addComponent(t1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void t1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t1ActionPerformed
        String txt = t1.getText().substring(4);
        if (txt.charAt(txt.length() - 1) == ';') {
            com[cnt] = txt;
            cnt++;
            if (txt.substring(0, 4).equalsIgnoreCase("read")) {
                File file = new File(txt.substring(5, txt.length() - 1));
                Notepad a = new Notepad(file);
                getParent().add(a);
                a.setLocation(400, 300);
                a.setVisible(true);
                ta1.append("\nCMD>" + txt);
                ta1.append("\nOpened Notepad...\nAdded Text from the text file to notepad..\nProcess Complete.\n");
            } else if (txt.substring(0, 8).equalsIgnoreCase("view pic")) {
                File file = new File(txt.substring(9, txt.length() - 1));
                PicV p = new PicV(file.getName(), file.getAbsolutePath());
                getParent().add(p);
                p.setVisible(true);
                ta1.append("\nCMD>" + txt);
                ta1.append("\nOpened JBOS Pcture Viewer...\nDisplaying Picture in the viewer..\nProcess Complete.\n");
            }
            t1.setText("CMD>");
            re = cnt;
        }
    }//GEN-LAST:event_t1ActionPerformed

    private void t1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t1KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
            if (t1.getText().equals("CMD>")) {
                t1.setText("CMD>>");
            }
        }
        if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
            if (t1.getText().equals("CMD>")) {
                t1.setText("CMD>");
            }
        }
            if (evt.getKeyCode() == KeyEvent.VK_UP) {
                re--;
                if(re==cnt-1)re=cnt;
                t1.setText("CMD>" + com[re]);
            }
            if (evt.getKeyCode() == KeyEvent.VK_UP) {
                re++;
                if(re==cnt+1)re=cnt;
                t1.setText("CMD>" + com[re]);
            }
    }//GEN-LAST:event_t1KeyPressed
    String com[] = new String[1000];
    int cnt = 0, re = 0;
    private void t1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t1KeyTyped
    }//GEN-LAST:event_t1KeyTyped
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField t1;
    private javax.swing.JTextArea ta1;
    // End of variables declaration//GEN-END:variables
}
